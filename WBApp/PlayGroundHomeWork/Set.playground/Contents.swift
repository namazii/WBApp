import Foundation

// –°–æ–∑–¥–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∏–∑ —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª
var numbers: Set<Int> = [2, 4, 6, 8]
print("Initial set: \(numbers)")

// –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —ç—Ç–æ –º–Ω–æ–∂–µ—Å—Ç–≤–æ
numbers.insert(10)
numbers.insert(12)
print("Set after insertion: \(numbers)")

// –£–¥–∞–ª—è–µ–º –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç
numbers.remove(4)
print("Set after removal: \(numbers)")

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–µ
let exists = numbers.contains(6)
let exists2 = numbers.contains(4)
print("Does 6 exist in the set? \(exists)")
print("Does 6 exist in the set? \(exists2)")

// –°–æ–∑–¥–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –¥–ª—è –±–æ–ª–µ–µ –Ω–∞–≥–ª—è–¥–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π

let emoje1: Set<String> = ["üòé", "ü§ì", "üßê", "ü•≥"]
let emoje2: Set<String> = ["üò¶", "üòß", "üò≤", "ü•≥"]

// –û–ø–µ—Ä–∞—Ü–∏–∏ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è, –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏—è –∏ —Ä–∞–∑–Ω–æ—Å—Ç–∏
let unionSet = emoje1.union(emoje2)
print("Union of sets: \(unionSet)")

let intersectionSet = emoje1.intersection(emoje2)
print("Intersection of sets: \(intersectionSet)")

let differenceSet = emoje1.subtracting(emoje2)
print("Difference of sets: \(differenceSet)")
